{
  "version": 3,
  "sources": ["../../tests/index.js"],
  "sourcesContent": ["const express = require('express');\nconst { getUserInfo } = require('../lib/index.js')\n\nconst app = express();\napp.use(express.static('public'));\n\napp.get('/', async function(req, res) {\n  const userInfo = getUserInfo(req)\n  console.log(userInfo)\n  if (userInfo) { // Check to see if the user is logged in.\n    //TEST: ensure all userInfo exists\n    const userInfoKeys = Object.keys(userInfo)\n    if (!userInfo || userInfoKeys.length < 4) {\n      throw new Error(\"User info doesn't have all information\")\n    }\n    for (let userInfoKey of userInfoKeys) {\n      if (!userInfo[userInfoKey]) {\n        throw new Error(userInfoKey + \" is empty\")\n      }\n    }\n\n    //TEST: if req headers are undefined, expect null\n    req.headers = {}\n    if (getUserInfo(req)) {\n      throw new Error(\"User info should be empty\")\n    }\n    res.send(\"server tests passed, \" + userInfo.name)\n  } else {\n    res.sendFile(__dirname + '/public/login.html'); // Send a login page if they are not.\n  }\n});\n\napp.get('/home', function(req, res) {\n  res.send(`<h1>Hello, ${req.query.user}</h1>`);\n});\n\napp.listen(8080, function() { // Start the server\n  console.log('Server up!');\n});"],
  "mappings": "AAAA,MAAM,UAAU,QAAQ;AACxB,MAAM,EAAE,gBAAgB,QAAQ;AAEhC,MAAM,MAAM;AACZ,IAAI,IAAI,QAAQ,OAAO;AAEvB,IAAI,IAAI,KAAK,eAAe,KAAK,KAAK;AACpC,QAAM,WAAW,YAAY;AAC7B,UAAQ,IAAI;AACZ,MAAI,UAAU;AAEZ,UAAM,eAAe,OAAO,KAAK;AACjC,QAAI,CAAC,YAAY,aAAa,SAAS,GAAG;AACxC,YAAM,IAAI,MAAM;AAAA;AAElB,aAAS,eAAe,cAAc;AACpC,UAAI,CAAC,SAAS,cAAc;AAC1B,cAAM,IAAI,MAAM,cAAc;AAAA;AAAA;AAKlC,QAAI,UAAU;AACd,QAAI,YAAY,MAAM;AACpB,YAAM,IAAI,MAAM;AAAA;AAElB,QAAI,KAAK,0BAA0B,SAAS;AAAA,SACvC;AACL,QAAI,SAAS,YAAY;AAAA;AAAA;AAI7B,IAAI,IAAI,SAAS,SAAS,KAAK,KAAK;AAClC,MAAI,KAAK,cAAc,IAAI,MAAM;AAAA;AAGnC,IAAI,OAAO,MAAM,WAAW;AAC1B,UAAQ,IAAI;AAAA;",
  "names": []
}
